% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/gru.R
\name{k_gru}
\alias{k_gru}
\title{k_gru}
\usage{
k_gru(in_dim = 10000, in_length = 100, embed_dim = 128, sp_drop = 0.2,
  gru_dim = 64, out_dim = 1, out_fun = "sigmoid", ...)
}
\arguments{
\item{in_dim}{Number of total vocabluary/words used}

\item{in_length}{Length of the input sequences}

\item{embed_dim}{Number of word vectors}

\item{sp_drop}{Spatial Dropout after Embedding}

\item{gru_dim}{Number of GRU neurons}

\item{out_dim}{Number of neurons of the output layer}

\item{out_fun}{Output activation function}

\item{...}{Exit arguments}
}
\value{
model
}
\description{
get Keras GRU model
}
\examples{
Taken from https://www.kaggle.com/yekenot/pooled-gru-fasttext

def get_model():
  inp = Input(shape=(maxlen, ))
x = Embedding(max_features, embed_size, weights=[embedding_matrix])(inp)
x = SpatialDropout1D(0.2)(x)
x = Bidirectional(GRU(80, return_sequences=True))(x)
avg_pool = GlobalAveragePooling1D()(x)
max_pool = GlobalMaxPooling1D()(x)
conc = concatenate([avg_pool, max_pool])
outp = Dense(6, activation="sigmoid")(conc)

model = Model(inputs=inp, outputs=outp)
model.compile(loss='binary_crossentropy',
              optimizer='adam',
              metrics=['accuracy'])
              
}
